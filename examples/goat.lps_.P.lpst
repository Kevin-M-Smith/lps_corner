/*
  LPS test results file generated on 2019-1-28 at 9:46:23
  on Prolog swi(7,7,19,[]) for program file:
  /Users/mc/git/logicalcontracts/examples/goat.lps_.P
*/

:-dynamic lps_test_result/3,lps_test_result_item/3,lps_test_action_ancestor/3,lps_test_options/1.

% LPS options prior to the test:
lps_test_options([dc]).

% lps_test_result(Stage,Cycle,TestTerm)
lps_test_result(fluents,0,4).
lps_test_result(events,1,0).
lps_test_result(fluents,1,4).
lps_test_result(events,2,2).
lps_test_result(fluents,2,4).
lps_test_result(events,3,1).
lps_test_result(fluents,3,4).
lps_test_result(events,4,2).
lps_test_result(fluents,4,4).
lps_test_result(events,5,2).
lps_test_result(fluents,5,4).
lps_test_result(events,6,2).
lps_test_result(fluents,6,4).
lps_test_result(events,7,1).
lps_test_result(fluents,7,4).
lps_test_result(events,8,2).
lps_test_result(fluents,8,4).
% lps_test_result_item(Stage,Cycle,TestTerm)
lps_test_result_item(fluents,0,loc(wolf,south)).
lps_test_result_item(fluents,0,loc(goat,south)).
lps_test_result_item(fluents,0,loc(cabbage,south)).
lps_test_result_item(fluents,0,loc(farmer,south)).
lps_test_result_item(fluents,1,loc(wolf,south)).
lps_test_result_item(fluents,1,loc(goat,south)).
lps_test_result_item(fluents,1,loc(cabbage,south)).
lps_test_result_item(fluents,1,loc(farmer,south)).
lps_test_result_item(events,2,row(south,north)).
lps_test_result_item(events,2,transport(goat,south,north)).
lps_test_result_item(fluents,2,loc(wolf,south)).
lps_test_result_item(fluents,2,loc(cabbage,south)).
lps_test_result_item(fluents,2,loc(farmer,north)).
lps_test_result_item(fluents,2,loc(goat,north)).
lps_test_result_item(events,3,row(north,south)).
lps_test_result_item(fluents,3,loc(wolf,south)).
lps_test_result_item(fluents,3,loc(cabbage,south)).
lps_test_result_item(fluents,3,loc(goat,north)).
lps_test_result_item(fluents,3,loc(farmer,south)).
lps_test_result_item(events,4,row(south,north)).
lps_test_result_item(events,4,transport(cabbage,south,north)).
lps_test_result_item(fluents,4,loc(wolf,south)).
lps_test_result_item(fluents,4,loc(goat,north)).
lps_test_result_item(fluents,4,loc(farmer,north)).
lps_test_result_item(fluents,4,loc(cabbage,north)).
lps_test_result_item(events,5,row(north,south)).
lps_test_result_item(events,5,transport(goat,north,south)).
lps_test_result_item(fluents,5,loc(wolf,south)).
lps_test_result_item(fluents,5,loc(cabbage,north)).
lps_test_result_item(fluents,5,loc(farmer,south)).
lps_test_result_item(fluents,5,loc(goat,south)).
lps_test_result_item(events,6,row(south,north)).
lps_test_result_item(events,6,transport(wolf,south,north)).
lps_test_result_item(fluents,6,loc(cabbage,north)).
lps_test_result_item(fluents,6,loc(goat,south)).
lps_test_result_item(fluents,6,loc(farmer,north)).
lps_test_result_item(fluents,6,loc(wolf,north)).
lps_test_result_item(events,7,row(north,south)).
lps_test_result_item(fluents,7,loc(cabbage,north)).
lps_test_result_item(fluents,7,loc(goat,south)).
lps_test_result_item(fluents,7,loc(wolf,north)).
lps_test_result_item(fluents,7,loc(farmer,south)).
lps_test_result_item(events,8,row(south,north)).
lps_test_result_item(events,8,transport(goat,south,north)).
lps_test_result_item(fluents,8,loc(cabbage,north)).
lps_test_result_item(fluents,8,loc(wolf,north)).
lps_test_result_item(fluents,8,loc(farmer,north)).
lps_test_result_item(fluents,8,loc(goat,north)).
% lps_test_action_ancestor(Call,T1,T2)
lps_test_action_ancestor(makeLoc(goat,north),6,8).
lps_test_action_ancestor(makeLoc(farmer,south),6,7).
lps_test_action_ancestor(dealWithGoat(north,south),6,7).
lps_test_action_ancestor(makeLoc(goat,north),6,_2020).
lps_test_action_ancestor(makeLoc(farmer,south),6,_2020).
lps_test_action_ancestor(makeLoc(wolf,north),4,6).
lps_test_action_ancestor(makeLoc(farmer,south),4,5).
lps_test_action_ancestor(dealWithGoat(north,south),4,5).
lps_test_action_ancestor(makeLoc(wolf,north),4,_2020).
lps_test_action_ancestor(makeLoc(farmer,south),4,_2020).
lps_test_action_ancestor(makeLoc(cabbage,north),2,4).
lps_test_action_ancestor(makeLoc(farmer,south),2,3).
lps_test_action_ancestor(dealWithGoat(north,south),2,3).
lps_test_action_ancestor(makeLoc(wolf,north),2,_2020).
lps_test_action_ancestor(makeLoc(farmer,south),2,_2020).
lps_test_action_ancestor(makeLoc(goat,north),1,2).
lps_test_action_ancestor(makeLoc(farmer,south),1,1).
