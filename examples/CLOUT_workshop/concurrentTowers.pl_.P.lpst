/*
  LPS test results file generated on 2017-11-5 at 18:21:8
  on Prolog swi(7,5,8,[]) for program file:
  /Users/mc/git/logicalcontracts/examples/CLOUT_workshop/concurrentTowers.pl_.P
*/

:-dynamic lps_test_result/3,lps_test_result_item/3,lps_test_action_ancestor/3,lps_test_options/1.

% LPS options prior to the test:
lps_test_options([dc]).

% lps_test_result(Stage,Cycle,TestTerm)
lps_test_result(fluents,0,6).
lps_test_result(events,1,0).
lps_test_result(fluents,1,6).
lps_test_result(events,2,1).
lps_test_result(fluents,2,6).
lps_test_result(events,3,2).
lps_test_result(fluents,3,6).
lps_test_result(events,4,2).
lps_test_result(fluents,4,6).
lps_test_result(events,5,2).
lps_test_result(fluents,5,6).
lps_test_result(events,6,0).
lps_test_result(fluents,6,6).
lps_test_result(events,7,0).
lps_test_result(fluents,7,6).
lps_test_result(events,8,0).
lps_test_result(fluents,8,6).
lps_test_result(events,9,0).
lps_test_result(fluents,9,6).
lps_test_result(events,10,0).
lps_test_result(fluents,10,6).
% lps_test_result_item(Stage,Cycle,TestTerm)
lps_test_result_item(fluents,0,location(f,floor)).
lps_test_result_item(fluents,0,location(b,f)).
lps_test_result_item(fluents,0,location(e,b)).
lps_test_result_item(fluents,0,location(a,floor)).
lps_test_result_item(fluents,0,location(d,a)).
lps_test_result_item(fluents,0,location(c,d)).
lps_test_result_item(fluents,1,location(f,floor)).
lps_test_result_item(fluents,1,location(b,f)).
lps_test_result_item(fluents,1,location(e,b)).
lps_test_result_item(fluents,1,location(a,floor)).
lps_test_result_item(fluents,1,location(d,a)).
lps_test_result_item(fluents,1,location(c,d)).
lps_test_result_item(events,2,move(c,floor)).
lps_test_result_item(fluents,2,location(f,floor)).
lps_test_result_item(fluents,2,location(b,f)).
lps_test_result_item(fluents,2,location(e,b)).
lps_test_result_item(fluents,2,location(a,floor)).
lps_test_result_item(fluents,2,location(d,a)).
lps_test_result_item(fluents,2,location(c,floor)).
lps_test_result_item(events,3,move(e,floor)).
lps_test_result_item(events,3,move(d,floor)).
lps_test_result_item(fluents,3,location(f,floor)).
lps_test_result_item(fluents,3,location(b,f)).
lps_test_result_item(fluents,3,location(a,floor)).
lps_test_result_item(fluents,3,location(c,floor)).
lps_test_result_item(fluents,3,location(e,floor)).
lps_test_result_item(fluents,3,location(d,floor)).
lps_test_result_item(events,4,move(e,d)).
lps_test_result_item(events,4,move(b,c)).
lps_test_result_item(fluents,4,location(f,floor)).
lps_test_result_item(fluents,4,location(a,floor)).
lps_test_result_item(fluents,4,location(c,floor)).
lps_test_result_item(fluents,4,location(d,floor)).
lps_test_result_item(fluents,4,location(e,d)).
lps_test_result_item(fluents,4,location(b,c)).
lps_test_result_item(events,5,move(a,b)).
lps_test_result_item(events,5,move(f,e)).
lps_test_result_item(fluents,5,location(c,floor)).
lps_test_result_item(fluents,5,location(d,floor)).
lps_test_result_item(fluents,5,location(e,d)).
lps_test_result_item(fluents,5,location(b,c)).
lps_test_result_item(fluents,5,location(a,b)).
lps_test_result_item(fluents,5,location(f,e)).
lps_test_result_item(fluents,6,location(c,floor)).
lps_test_result_item(fluents,6,location(d,floor)).
lps_test_result_item(fluents,6,location(e,d)).
lps_test_result_item(fluents,6,location(b,c)).
lps_test_result_item(fluents,6,location(a,b)).
lps_test_result_item(fluents,6,location(f,e)).
lps_test_result_item(fluents,7,location(c,floor)).
lps_test_result_item(fluents,7,location(d,floor)).
lps_test_result_item(fluents,7,location(e,d)).
lps_test_result_item(fluents,7,location(b,c)).
lps_test_result_item(fluents,7,location(a,b)).
lps_test_result_item(fluents,7,location(f,e)).
lps_test_result_item(fluents,8,location(c,floor)).
lps_test_result_item(fluents,8,location(d,floor)).
lps_test_result_item(fluents,8,location(e,d)).
lps_test_result_item(fluents,8,location(b,c)).
lps_test_result_item(fluents,8,location(a,b)).
lps_test_result_item(fluents,8,location(f,e)).
lps_test_result_item(fluents,9,location(c,floor)).
lps_test_result_item(fluents,9,location(d,floor)).
lps_test_result_item(fluents,9,location(e,d)).
lps_test_result_item(fluents,9,location(b,c)).
lps_test_result_item(fluents,9,location(a,b)).
lps_test_result_item(fluents,9,location(f,e)).
lps_test_result_item(fluents,10,location(c,floor)).
lps_test_result_item(fluents,10,location(d,floor)).
lps_test_result_item(fluents,10,location(e,d)).
lps_test_result_item(fluents,10,location(b,c)).
lps_test_result_item(fluents,10,location(a,b)).
lps_test_result_item(fluents,10,location(f,e)).
% lps_test_action_ancestor(Call,T1,T2)
lps_test_action_ancestor(make_tower([f,e,d,floor]),3,5).
lps_test_action_ancestor(make_tower([e,d,floor]),3,4).
lps_test_action_ancestor(make_tower([d,floor]),3,3).
lps_test_action_ancestor(make_on(d,floor),3,3).
lps_test_action_ancestor(make_on(f,e),4,5).
lps_test_action_ancestor(make_clear(e),4,4).
lps_test_action_ancestor(make_clear(f),4,4).
lps_test_action_ancestor(make_tower([a,b,c,floor]),2,5).
lps_test_action_ancestor(make_tower([b,c,floor]),2,4).
lps_test_action_ancestor(make_on(a,b),4,5).
lps_test_action_ancestor(make_clear(b),4,4).
lps_test_action_ancestor(make_clear(a),4,4).
lps_test_action_ancestor(make_tower([a,b,c,floor]),1,_120958).
lps_test_action_ancestor(make_tower([b,c,floor]),1,4).
lps_test_action_ancestor(make_tower([c,floor]),1,2).
lps_test_action_ancestor(make_on(b,c),2,4).
lps_test_action_ancestor(make_tower([e,d,floor]),1,4).
lps_test_action_ancestor(make_on(e,d),3,4).
lps_test_action_ancestor(make_clear(d),3,3).
lps_test_action_ancestor(make_clear(e),3,3).
lps_test_action_ancestor(make_tower([d,floor]),1,3).
lps_test_action_ancestor(make_on(d,floor),1,3).
lps_test_action_ancestor(make_on(a,floor),1,1).
lps_test_action_ancestor(make_tower([a,b,c,floor]),2,_120958).
lps_test_action_ancestor(make_tower([b,c,floor]),2,_120952).
lps_test_action_ancestor(make_tower([c,floor]),2,2).
lps_test_action_ancestor(make_on(c,floor),2,2).
lps_test_action_ancestor(make_on(b,c),2,_120936).
lps_test_action_ancestor(make_clear(c),2,2).
lps_test_action_ancestor(make_clear(b),2,3).
lps_test_action_ancestor(make_on(e,floor),2,3).
lps_test_action_ancestor(make_clear(floor),2,2).
lps_test_action_ancestor(make_clear(e),2,2).
lps_test_action_ancestor(make_tower([f,e,d,floor]),1,_120958).
lps_test_action_ancestor(make_tower([e,d,floor]),1,_120952).
lps_test_action_ancestor(make_tower([d,floor]),1,_120946).
lps_test_action_ancestor(make_on(d,floor),1,_120936).
lps_test_action_ancestor(make_clear(d),1,2).
lps_test_action_ancestor(make_on(c,floor),1,2).
lps_test_action_ancestor(make_clear(floor),1,1).
lps_test_action_ancestor(make_clear(c),1,1).
