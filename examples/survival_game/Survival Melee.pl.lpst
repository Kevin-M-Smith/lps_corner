/*
  LPS test results file generated on 2016-04-27 at 17:22:41 for program file:
  /Users/mc/git/lps_corner/examples/survival_game/Survival Melee.pl
*/

% LPS options prior to the test:
lps_test_options([verbose]).

% lps_test_result(Stage,Cycle,TestTerm)
lps_test_result('Observations:',1,[start_game(amanda),start_game(katherine),start_game(peter),start_game(tom),start_game(alex)]).
lps_test_result('Candidate actions:',1,[]).
lps_test_result('Selected actions:',1,[]).
lps_test_result('Database state:',1,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',1,[]).
lps_test_result('New goals:',1,[]).
lps_test_result('Resolved goals:',1,[]).
lps_test_result('Observations:',2,[]).
lps_test_result('Candidate actions:',2,[]).
lps_test_result('Selected actions:',2,[]).
lps_test_result('Database state:',2,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',2,[]).
lps_test_result('New goals:',2,[]).
lps_test_result('Resolved goals:',2,[]).
lps_test_result('Observations:',3,[]).
lps_test_result('Candidate actions:',3,[]).
lps_test_result('Selected actions:',3,[]).
lps_test_result('Database state:',3,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',3,[]).
lps_test_result('New goals:',3,[]).
lps_test_result('Resolved goals:',3,[]).
lps_test_result('Observations:',4,[]).
lps_test_result('Candidate actions:',4,[]).
lps_test_result('Selected actions:',4,[]).
lps_test_result('Database state:',4,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',4,[]).
lps_test_result('New goals:',4,[]).
lps_test_result('Resolved goals:',4,[]).
lps_test_result('Observations:',5,[]).
lps_test_result('Candidate actions:',5,[]).
lps_test_result('Selected actions:',5,[]).
lps_test_result('Database state:',5,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',5,[]).
lps_test_result('New goals:',5,[]).
lps_test_result('Resolved goals:',5,[]).
lps_test_result('Observations:',6,[]).
lps_test_result('Candidate actions:',6,[]).
lps_test_result('Selected actions:',6,[]).
lps_test_result('Database state:',6,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',6,[]).
lps_test_result('New goals:',6,[]).
lps_test_result('Resolved goals:',6,[]).
lps_test_result('Observations:',7,[]).
lps_test_result('Candidate actions:',7,[]).
lps_test_result('Selected actions:',7,[]).
lps_test_result('Database state:',7,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',7,[]).
lps_test_result('New goals:',7,[]).
lps_test_result('Resolved goals:',7,[]).
lps_test_result('Observations:',8,[]).
lps_test_result('Candidate actions:',8,[]).
lps_test_result('Selected actions:',8,[]).
lps_test_result('Database state:',8,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',8,[]).
lps_test_result('New goals:',8,[]).
lps_test_result('Resolved goals:',8,[]).
lps_test_result('Observations:',9,[]).
lps_test_result('Candidate actions:',9,[]).
lps_test_result('Selected actions:',9,[]).
lps_test_result('Database state:',9,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',9,[]).
lps_test_result('New goals:',9,[]).
lps_test_result('Resolved goals:',9,[]).
lps_test_result('Observations:',10,[]).
lps_test_result('Candidate actions:',10,[]).
lps_test_result('Selected actions:',10,[]).
lps_test_result('Database state:',10,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',10,[]).
lps_test_result('New goals:',10,[]).
lps_test_result('Resolved goals:',10,[]).
lps_test_result('Observations:',11,[]).
lps_test_result('Candidate actions:',11,[]).
lps_test_result('Selected actions:',11,[]).
lps_test_result('Database state:',11,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',11,[]).
lps_test_result('New goals:',11,[]).
lps_test_result('Resolved goals:',11,[]).
lps_test_result('Observations:',12,[]).
lps_test_result('Candidate actions:',12,[]).
lps_test_result('Selected actions:',12,[]).
lps_test_result('Database state:',12,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',12,[]).
lps_test_result('New goals:',12,[]).
lps_test_result('Resolved goals:',12,[]).
lps_test_result('Observations:',13,[]).
lps_test_result('Candidate actions:',13,[]).
lps_test_result('Selected actions:',13,[]).
lps_test_result('Database state:',13,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',13,[]).
lps_test_result('New goals:',13,[]).
lps_test_result('Resolved goals:',13,[]).
lps_test_result('Observations:',14,[]).
lps_test_result('Candidate actions:',14,[]).
lps_test_result('Selected actions:',14,[]).
lps_test_result('Database state:',14,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',14,[]).
lps_test_result('New goals:',14,[]).
lps_test_result('Resolved goals:',14,[]).
lps_test_result('Observations:',15,[]).
lps_test_result('Candidate actions:',15,[]).
lps_test_result('Selected actions:',15,[]).
lps_test_result('Database state:',15,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',15,[]).
lps_test_result('New goals:',15,[]).
lps_test_result('Resolved goals:',15,[]).
lps_test_result('Observations:',16,[]).
lps_test_result('Candidate actions:',16,[]).
lps_test_result('Selected actions:',16,[]).
lps_test_result('Database state:',16,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',16,[]).
lps_test_result('New goals:',16,[]).
lps_test_result('Resolved goals:',16,[]).
lps_test_result('Observations:',17,[]).
lps_test_result('Candidate actions:',17,[]).
lps_test_result('Selected actions:',17,[]).
lps_test_result('Database state:',17,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',17,[]).
lps_test_result('New goals:',17,[]).
lps_test_result('Resolved goals:',17,[]).
lps_test_result('Observations:',18,[]).
lps_test_result('Candidate actions:',18,[]).
lps_test_result('Selected actions:',18,[]).
lps_test_result('Database state:',18,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',18,[]).
lps_test_result('New goals:',18,[]).
lps_test_result('Resolved goals:',18,[]).
lps_test_result('Observations:',19,[]).
lps_test_result('Candidate actions:',19,[]).
lps_test_result('Selected actions:',19,[]).
lps_test_result('Database state:',19,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',19,[]).
lps_test_result('New goals:',19,[]).
lps_test_result('Resolved goals:',19,[]).
lps_test_result('Observations:',20,[]).
lps_test_result('Candidate actions:',20,[]).
lps_test_result('Selected actions:',20,[]).
lps_test_result('Database state:',20,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',20,[]).
lps_test_result('New goals:',20,[]).
lps_test_result('Resolved goals:',20,[]).
lps_test_result('Observations:',21,[]).
lps_test_result('Candidate actions:',21,[]).
lps_test_result('Selected actions:',21,[]).
lps_test_result('Database state:',21,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',21,[]).
lps_test_result('New goals:',21,[]).
lps_test_result('Resolved goals:',21,[]).
lps_test_result('Observations:',22,[]).
lps_test_result('Candidate actions:',22,[]).
lps_test_result('Selected actions:',22,[]).
lps_test_result('Database state:',22,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',22,[]).
lps_test_result('New goals:',22,[]).
lps_test_result('Resolved goals:',22,[]).
lps_test_result('Observations:',23,[]).
lps_test_result('Candidate actions:',23,[]).
lps_test_result('Selected actions:',23,[]).
lps_test_result('Database state:',23,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',23,[]).
lps_test_result('New goals:',23,[]).
lps_test_result('Resolved goals:',23,[]).
lps_test_result('Observations:',24,[]).
lps_test_result('Candidate actions:',24,[]).
lps_test_result('Selected actions:',24,[]).
lps_test_result('Database state:',24,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',24,[]).
lps_test_result('New goals:',24,[]).
lps_test_result('Resolved goals:',24,[]).
lps_test_result('Observations:',25,[]).
lps_test_result('Candidate actions:',25,[]).
lps_test_result('Selected actions:',25,[]).
lps_test_result('Database state:',25,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',25,[]).
lps_test_result('New goals:',25,[]).
lps_test_result('Resolved goals:',25,[]).
lps_test_result('Observations:',26,[]).
lps_test_result('Candidate actions:',26,[]).
lps_test_result('Selected actions:',26,[]).
lps_test_result('Database state:',26,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',26,[]).
lps_test_result('New goals:',26,[]).
lps_test_result('Resolved goals:',26,[]).
lps_test_result('Observations:',27,[]).
lps_test_result('Candidate actions:',27,[]).
lps_test_result('Selected actions:',27,[]).
lps_test_result('Database state:',27,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',27,[]).
lps_test_result('New goals:',27,[]).
lps_test_result('Resolved goals:',27,[]).
lps_test_result('Observations:',28,[]).
lps_test_result('Candidate actions:',28,[]).
lps_test_result('Selected actions:',28,[]).
lps_test_result('Database state:',28,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',28,[]).
lps_test_result('New goals:',28,[]).
lps_test_result('Resolved goals:',28,[]).
lps_test_result('Observations:',29,[]).
lps_test_result('Candidate actions:',29,[]).
lps_test_result('Selected actions:',29,[]).
lps_test_result('Database state:',29,[person(amanda,cautious),person(katherine,normal),person(peter,normal),person(tom,normal),person(alex,violent),position(amanda,north,3,3),holds_wood(amanda,0),holds_food(amanda,0,0,0,0),health(amanda,50),hunger(amanda,20),has_shelter(amanda,true),shelter(amanda,100,4,5),turns(amanda,0),position(katherine,east,4,18),holds_wood(katherine,0),holds_food(katherine,0,0,0,0),health(katherine,50),hunger(katherine,20),has_shelter(katherine,true),shelter(katherine,100,8,19),turns(katherine,0),position(peter,north,17,3),holds_wood(peter,0),holds_food(peter,0,0,0,0),health(peter,50),hunger(peter,20),has_shelter(peter,true),shelter(peter,100,13,4),turns(peter,0),position(tom,west,19,18),holds_wood(tom,0),holds_food(tom,0,0,0,0),health(tom,50),hunger(tom,20),has_shelter(tom,true),shelter(tom,100,14,20),turns(tom,0),position(alex,north,10,9),holds_wood(alex,0),holds_food(alex,10,0,0,2),health(alex,50),hunger(alex,20),has_shelter(alex,false),turns(alex,0),animal(rabbit,5,west,5,7),animal(rabbit,5,east,12,8),animal(rabbit,5,west,4,9),animal(rabbit,5,south,1,10),animal(rabbit,5,west,6,13),animal(rabbit,5,north,14,16),animal(rabbit,5,north,9,16),animal(chicken,10,north,7,6),animal(chicken,10,east,16,6),animal(chicken,10,east,8,8),animal(chicken,10,west,2,13),animal(chicken,10,east,3,15),animal(chicken,10,south,12,15),animal(chicken,10,south,13,18),animal(cow,15,north,9,3),animal(cow,15,north,18,8),animal(cow,15,south,17,13),animal(cow,15,west,6,16),food(2,1,0,3,8),food(2,1,1,15,9),food(2,1,2,20,9),food(2,1,0,8,14),tree(1,1),tree(4,1),tree(11,1),tree(18,1),tree(2,2),tree(13,2),tree(6,3),tree(19,4),tree(1,5),tree(11,6),tree(13,7),tree(12,10),tree(8,11),tree(11,12),tree(14,12),tree(19,14),tree(1,15),tree(3,17),tree(1,19),tree(6,19),tree(4,20),tree(8,20),tree(17,20),tree(20,20),wood(7,1),wood(4,11),wood(18,11),wood(10,14),cycles(0)]).
lps_test_result('New partial reactive rules:',29,[]).
lps_test_result('New goals:',29,[]).
lps_test_result('Resolved goals:',29,[]).
