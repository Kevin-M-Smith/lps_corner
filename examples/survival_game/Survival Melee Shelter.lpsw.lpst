/*
  LPS test results file generated on 2016-05-16 at 09:11:36 for program file:
  /Users/mc/git/lps_corner/examples/survival_game/Survival Melee Shelter.lpsw
*/

% LPS options prior to the test:
lps_test_options([verbose]).

% lps_test_result(Stage,Cycle,TestTerm)
lps_test_result('Observations:',1,2).
lps_test_result('Candidate actions:',1,0).
lps_test_result('Selected actions:',1,0).
lps_test_result('Database state:',1,27).
lps_test_result('New partial reactive rules:',1,0).
lps_test_result('New goals:',1,0).
lps_test_result('Resolved goals:',1,0).
lps_test_result('Observations:',2,0).
lps_test_result('Candidate actions:',2,0).
lps_test_result('Selected actions:',2,0).
lps_test_result('Database state:',2,27).
lps_test_result('New partial reactive rules:',2,0).
lps_test_result('New goals:',2,0).
lps_test_result('Resolved goals:',2,0).
lps_test_result('Observations:',3,0).
lps_test_result('Candidate actions:',3,0).
lps_test_result('Selected actions:',3,0).
lps_test_result('Database state:',3,27).
lps_test_result('New partial reactive rules:',3,0).
lps_test_result('New goals:',3,0).
lps_test_result('Resolved goals:',3,0).
lps_test_result('Observations:',4,0).
lps_test_result('Candidate actions:',4,0).
lps_test_result('Selected actions:',4,0).
lps_test_result('Database state:',4,27).
lps_test_result('New partial reactive rules:',4,0).
lps_test_result('New goals:',4,0).
lps_test_result('Resolved goals:',4,0).
lps_test_result('Observations:',5,0).
lps_test_result('Candidate actions:',5,0).
lps_test_result('Selected actions:',5,0).
lps_test_result('Database state:',5,27).
lps_test_result('New partial reactive rules:',5,0).
lps_test_result('New goals:',5,0).
lps_test_result('Resolved goals:',5,0).
lps_test_result('Observations:',6,0).
lps_test_result('Candidate actions:',6,0).
lps_test_result('Selected actions:',6,0).
lps_test_result('Database state:',6,27).
lps_test_result('New partial reactive rules:',6,0).
lps_test_result('New goals:',6,0).
lps_test_result('Resolved goals:',6,0).
lps_test_result('Observations:',7,0).
lps_test_result('Candidate actions:',7,0).
lps_test_result('Selected actions:',7,0).
lps_test_result('Database state:',7,27).
lps_test_result('New partial reactive rules:',7,0).
lps_test_result('New goals:',7,0).
lps_test_result('Resolved goals:',7,0).
lps_test_result('Observations:',8,0).
lps_test_result('Candidate actions:',8,0).
lps_test_result('Selected actions:',8,0).
lps_test_result('Database state:',8,27).
lps_test_result('New partial reactive rules:',8,0).
lps_test_result('New goals:',8,0).
lps_test_result('Resolved goals:',8,0).
lps_test_result('Observations:',9,0).
lps_test_result('Candidate actions:',9,0).
lps_test_result('Selected actions:',9,0).
lps_test_result('Database state:',9,27).
lps_test_result('New partial reactive rules:',9,0).
lps_test_result('New goals:',9,0).
lps_test_result('Resolved goals:',9,0).
lps_test_result('Observations:',10,0).
lps_test_result('Candidate actions:',10,0).
lps_test_result('Selected actions:',10,0).
lps_test_result('Database state:',10,27).
lps_test_result('New partial reactive rules:',10,0).
lps_test_result('New goals:',10,0).
lps_test_result('Resolved goals:',10,0).
lps_test_result('Observations:',11,0).
lps_test_result('Candidate actions:',11,0).
lps_test_result('Selected actions:',11,0).
lps_test_result('Database state:',11,27).
lps_test_result('New partial reactive rules:',11,0).
lps_test_result('New goals:',11,0).
lps_test_result('Resolved goals:',11,0).
lps_test_result('Observations:',12,0).
lps_test_result('Candidate actions:',12,0).
lps_test_result('Selected actions:',12,0).
lps_test_result('Database state:',12,27).
lps_test_result('New partial reactive rules:',12,0).
lps_test_result('New goals:',12,0).
lps_test_result('Resolved goals:',12,0).
lps_test_result('Observations:',13,0).
lps_test_result('Candidate actions:',13,0).
lps_test_result('Selected actions:',13,0).
lps_test_result('Database state:',13,27).
lps_test_result('New partial reactive rules:',13,0).
lps_test_result('New goals:',13,0).
lps_test_result('Resolved goals:',13,0).
lps_test_result('Observations:',14,0).
lps_test_result('Candidate actions:',14,0).
lps_test_result('Selected actions:',14,0).
lps_test_result('Database state:',14,27).
lps_test_result('New partial reactive rules:',14,0).
lps_test_result('New goals:',14,0).
lps_test_result('Resolved goals:',14,0).
lps_test_result('Observations:',15,0).
lps_test_result('Candidate actions:',15,0).
lps_test_result('Selected actions:',15,0).
lps_test_result('Database state:',15,27).
lps_test_result('New partial reactive rules:',15,0).
lps_test_result('New goals:',15,0).
lps_test_result('Resolved goals:',15,0).
lps_test_result('Observations:',16,0).
lps_test_result('Candidate actions:',16,0).
lps_test_result('Selected actions:',16,0).
lps_test_result('Database state:',16,27).
lps_test_result('New partial reactive rules:',16,0).
lps_test_result('New goals:',16,0).
lps_test_result('Resolved goals:',16,0).
lps_test_result('Observations:',17,0).
lps_test_result('Candidate actions:',17,0).
lps_test_result('Selected actions:',17,0).
lps_test_result('Database state:',17,27).
lps_test_result('New partial reactive rules:',17,0).
lps_test_result('New goals:',17,0).
lps_test_result('Resolved goals:',17,0).
% lps_test_result_item(Stage,Cycle,TestTerm)
lps_test_result_item('Observations:',1,start_game(amanda)).
lps_test_result_item('Observations:',1,start_game(katherine)).
lps_test_result_item('Database state:',1,person(amanda,cautious)).
lps_test_result_item('Database state:',1,person(katherine,normal)).
lps_test_result_item('Database state:',1,position(amanda,north,7,4)).
lps_test_result_item('Database state:',1,holds_wood(amanda,0)).
lps_test_result_item('Database state:',1,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',1,health(amanda,50)).
lps_test_result_item('Database state:',1,hunger(amanda,20)).
lps_test_result_item('Database state:',1,has_shelter(amanda,false)).
lps_test_result_item('Database state:',1,turns(amanda,0)).
lps_test_result_item('Database state:',1,position(katherine,south,3,16)).
lps_test_result_item('Database state:',1,holds_wood(katherine,0)).
lps_test_result_item('Database state:',1,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',1,health(katherine,50)).
lps_test_result_item('Database state:',1,hunger(katherine,20)).
lps_test_result_item('Database state:',1,has_shelter(katherine,false)).
lps_test_result_item('Database state:',1,turns(katherine,0)).
lps_test_result_item('Database state:',1,tree(7,3)).
lps_test_result_item('Database state:',1,tree(4,4)).
lps_test_result_item('Database state:',1,tree(5,5)).
lps_test_result_item('Database state:',1,tree(5,7)).
lps_test_result_item('Database state:',1,tree(3,17)).
lps_test_result_item('Database state:',1,tree(3,19)).
lps_test_result_item('Database state:',1,tree(4,18)).
lps_test_result_item('Database state:',1,tree(6,18)).
lps_test_result_item('Database state:',1,wood(6,4)).
lps_test_result_item('Database state:',1,wood(5,17)).
lps_test_result_item('Database state:',1,cycles(0)).
lps_test_result_item('Database state:',2,person(amanda,cautious)).
lps_test_result_item('Database state:',2,person(katherine,normal)).
lps_test_result_item('Database state:',2,position(amanda,north,7,4)).
lps_test_result_item('Database state:',2,holds_wood(amanda,0)).
lps_test_result_item('Database state:',2,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',2,health(amanda,50)).
lps_test_result_item('Database state:',2,hunger(amanda,20)).
lps_test_result_item('Database state:',2,has_shelter(amanda,false)).
lps_test_result_item('Database state:',2,turns(amanda,0)).
lps_test_result_item('Database state:',2,position(katherine,south,3,16)).
lps_test_result_item('Database state:',2,holds_wood(katherine,0)).
lps_test_result_item('Database state:',2,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',2,health(katherine,50)).
lps_test_result_item('Database state:',2,hunger(katherine,20)).
lps_test_result_item('Database state:',2,has_shelter(katherine,false)).
lps_test_result_item('Database state:',2,turns(katherine,0)).
lps_test_result_item('Database state:',2,tree(7,3)).
lps_test_result_item('Database state:',2,tree(4,4)).
lps_test_result_item('Database state:',2,tree(5,5)).
lps_test_result_item('Database state:',2,tree(5,7)).
lps_test_result_item('Database state:',2,tree(3,17)).
lps_test_result_item('Database state:',2,tree(3,19)).
lps_test_result_item('Database state:',2,tree(4,18)).
lps_test_result_item('Database state:',2,tree(6,18)).
lps_test_result_item('Database state:',2,wood(6,4)).
lps_test_result_item('Database state:',2,wood(5,17)).
lps_test_result_item('Database state:',2,cycles(0)).
lps_test_result_item('Database state:',3,person(amanda,cautious)).
lps_test_result_item('Database state:',3,person(katherine,normal)).
lps_test_result_item('Database state:',3,position(amanda,north,7,4)).
lps_test_result_item('Database state:',3,holds_wood(amanda,0)).
lps_test_result_item('Database state:',3,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',3,health(amanda,50)).
lps_test_result_item('Database state:',3,hunger(amanda,20)).
lps_test_result_item('Database state:',3,has_shelter(amanda,false)).
lps_test_result_item('Database state:',3,turns(amanda,0)).
lps_test_result_item('Database state:',3,position(katherine,south,3,16)).
lps_test_result_item('Database state:',3,holds_wood(katherine,0)).
lps_test_result_item('Database state:',3,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',3,health(katherine,50)).
lps_test_result_item('Database state:',3,hunger(katherine,20)).
lps_test_result_item('Database state:',3,has_shelter(katherine,false)).
lps_test_result_item('Database state:',3,turns(katherine,0)).
lps_test_result_item('Database state:',3,tree(7,3)).
lps_test_result_item('Database state:',3,tree(4,4)).
lps_test_result_item('Database state:',3,tree(5,5)).
lps_test_result_item('Database state:',3,tree(5,7)).
lps_test_result_item('Database state:',3,tree(3,17)).
lps_test_result_item('Database state:',3,tree(3,19)).
lps_test_result_item('Database state:',3,tree(4,18)).
lps_test_result_item('Database state:',3,tree(6,18)).
lps_test_result_item('Database state:',3,wood(6,4)).
lps_test_result_item('Database state:',3,wood(5,17)).
lps_test_result_item('Database state:',3,cycles(0)).
lps_test_result_item('Database state:',4,person(amanda,cautious)).
lps_test_result_item('Database state:',4,person(katherine,normal)).
lps_test_result_item('Database state:',4,position(amanda,north,7,4)).
lps_test_result_item('Database state:',4,holds_wood(amanda,0)).
lps_test_result_item('Database state:',4,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',4,health(amanda,50)).
lps_test_result_item('Database state:',4,hunger(amanda,20)).
lps_test_result_item('Database state:',4,has_shelter(amanda,false)).
lps_test_result_item('Database state:',4,turns(amanda,0)).
lps_test_result_item('Database state:',4,position(katherine,south,3,16)).
lps_test_result_item('Database state:',4,holds_wood(katherine,0)).
lps_test_result_item('Database state:',4,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',4,health(katherine,50)).
lps_test_result_item('Database state:',4,hunger(katherine,20)).
lps_test_result_item('Database state:',4,has_shelter(katherine,false)).
lps_test_result_item('Database state:',4,turns(katherine,0)).
lps_test_result_item('Database state:',4,tree(7,3)).
lps_test_result_item('Database state:',4,tree(4,4)).
lps_test_result_item('Database state:',4,tree(5,5)).
lps_test_result_item('Database state:',4,tree(5,7)).
lps_test_result_item('Database state:',4,tree(3,17)).
lps_test_result_item('Database state:',4,tree(3,19)).
lps_test_result_item('Database state:',4,tree(4,18)).
lps_test_result_item('Database state:',4,tree(6,18)).
lps_test_result_item('Database state:',4,wood(6,4)).
lps_test_result_item('Database state:',4,wood(5,17)).
lps_test_result_item('Database state:',4,cycles(0)).
lps_test_result_item('Database state:',5,person(amanda,cautious)).
lps_test_result_item('Database state:',5,person(katherine,normal)).
lps_test_result_item('Database state:',5,position(amanda,north,7,4)).
lps_test_result_item('Database state:',5,holds_wood(amanda,0)).
lps_test_result_item('Database state:',5,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',5,health(amanda,50)).
lps_test_result_item('Database state:',5,hunger(amanda,20)).
lps_test_result_item('Database state:',5,has_shelter(amanda,false)).
lps_test_result_item('Database state:',5,turns(amanda,0)).
lps_test_result_item('Database state:',5,position(katherine,south,3,16)).
lps_test_result_item('Database state:',5,holds_wood(katherine,0)).
lps_test_result_item('Database state:',5,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',5,health(katherine,50)).
lps_test_result_item('Database state:',5,hunger(katherine,20)).
lps_test_result_item('Database state:',5,has_shelter(katherine,false)).
lps_test_result_item('Database state:',5,turns(katherine,0)).
lps_test_result_item('Database state:',5,tree(7,3)).
lps_test_result_item('Database state:',5,tree(4,4)).
lps_test_result_item('Database state:',5,tree(5,5)).
lps_test_result_item('Database state:',5,tree(5,7)).
lps_test_result_item('Database state:',5,tree(3,17)).
lps_test_result_item('Database state:',5,tree(3,19)).
lps_test_result_item('Database state:',5,tree(4,18)).
lps_test_result_item('Database state:',5,tree(6,18)).
lps_test_result_item('Database state:',5,wood(6,4)).
lps_test_result_item('Database state:',5,wood(5,17)).
lps_test_result_item('Database state:',5,cycles(0)).
lps_test_result_item('Database state:',6,person(amanda,cautious)).
lps_test_result_item('Database state:',6,person(katherine,normal)).
lps_test_result_item('Database state:',6,position(amanda,north,7,4)).
lps_test_result_item('Database state:',6,holds_wood(amanda,0)).
lps_test_result_item('Database state:',6,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',6,health(amanda,50)).
lps_test_result_item('Database state:',6,hunger(amanda,20)).
lps_test_result_item('Database state:',6,has_shelter(amanda,false)).
lps_test_result_item('Database state:',6,turns(amanda,0)).
lps_test_result_item('Database state:',6,position(katherine,south,3,16)).
lps_test_result_item('Database state:',6,holds_wood(katherine,0)).
lps_test_result_item('Database state:',6,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',6,health(katherine,50)).
lps_test_result_item('Database state:',6,hunger(katherine,20)).
lps_test_result_item('Database state:',6,has_shelter(katherine,false)).
lps_test_result_item('Database state:',6,turns(katherine,0)).
lps_test_result_item('Database state:',6,tree(7,3)).
lps_test_result_item('Database state:',6,tree(4,4)).
lps_test_result_item('Database state:',6,tree(5,5)).
lps_test_result_item('Database state:',6,tree(5,7)).
lps_test_result_item('Database state:',6,tree(3,17)).
lps_test_result_item('Database state:',6,tree(3,19)).
lps_test_result_item('Database state:',6,tree(4,18)).
lps_test_result_item('Database state:',6,tree(6,18)).
lps_test_result_item('Database state:',6,wood(6,4)).
lps_test_result_item('Database state:',6,wood(5,17)).
lps_test_result_item('Database state:',6,cycles(0)).
lps_test_result_item('Database state:',7,person(amanda,cautious)).
lps_test_result_item('Database state:',7,person(katherine,normal)).
lps_test_result_item('Database state:',7,position(amanda,north,7,4)).
lps_test_result_item('Database state:',7,holds_wood(amanda,0)).
lps_test_result_item('Database state:',7,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',7,health(amanda,50)).
lps_test_result_item('Database state:',7,hunger(amanda,20)).
lps_test_result_item('Database state:',7,has_shelter(amanda,false)).
lps_test_result_item('Database state:',7,turns(amanda,0)).
lps_test_result_item('Database state:',7,position(katherine,south,3,16)).
lps_test_result_item('Database state:',7,holds_wood(katherine,0)).
lps_test_result_item('Database state:',7,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',7,health(katherine,50)).
lps_test_result_item('Database state:',7,hunger(katherine,20)).
lps_test_result_item('Database state:',7,has_shelter(katherine,false)).
lps_test_result_item('Database state:',7,turns(katherine,0)).
lps_test_result_item('Database state:',7,tree(7,3)).
lps_test_result_item('Database state:',7,tree(4,4)).
lps_test_result_item('Database state:',7,tree(5,5)).
lps_test_result_item('Database state:',7,tree(5,7)).
lps_test_result_item('Database state:',7,tree(3,17)).
lps_test_result_item('Database state:',7,tree(3,19)).
lps_test_result_item('Database state:',7,tree(4,18)).
lps_test_result_item('Database state:',7,tree(6,18)).
lps_test_result_item('Database state:',7,wood(6,4)).
lps_test_result_item('Database state:',7,wood(5,17)).
lps_test_result_item('Database state:',7,cycles(0)).
lps_test_result_item('Database state:',8,person(amanda,cautious)).
lps_test_result_item('Database state:',8,person(katherine,normal)).
lps_test_result_item('Database state:',8,position(amanda,north,7,4)).
lps_test_result_item('Database state:',8,holds_wood(amanda,0)).
lps_test_result_item('Database state:',8,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',8,health(amanda,50)).
lps_test_result_item('Database state:',8,hunger(amanda,20)).
lps_test_result_item('Database state:',8,has_shelter(amanda,false)).
lps_test_result_item('Database state:',8,turns(amanda,0)).
lps_test_result_item('Database state:',8,position(katherine,south,3,16)).
lps_test_result_item('Database state:',8,holds_wood(katherine,0)).
lps_test_result_item('Database state:',8,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',8,health(katherine,50)).
lps_test_result_item('Database state:',8,hunger(katherine,20)).
lps_test_result_item('Database state:',8,has_shelter(katherine,false)).
lps_test_result_item('Database state:',8,turns(katherine,0)).
lps_test_result_item('Database state:',8,tree(7,3)).
lps_test_result_item('Database state:',8,tree(4,4)).
lps_test_result_item('Database state:',8,tree(5,5)).
lps_test_result_item('Database state:',8,tree(5,7)).
lps_test_result_item('Database state:',8,tree(3,17)).
lps_test_result_item('Database state:',8,tree(3,19)).
lps_test_result_item('Database state:',8,tree(4,18)).
lps_test_result_item('Database state:',8,tree(6,18)).
lps_test_result_item('Database state:',8,wood(6,4)).
lps_test_result_item('Database state:',8,wood(5,17)).
lps_test_result_item('Database state:',8,cycles(0)).
lps_test_result_item('Database state:',9,person(amanda,cautious)).
lps_test_result_item('Database state:',9,person(katherine,normal)).
lps_test_result_item('Database state:',9,position(amanda,north,7,4)).
lps_test_result_item('Database state:',9,holds_wood(amanda,0)).
lps_test_result_item('Database state:',9,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',9,health(amanda,50)).
lps_test_result_item('Database state:',9,hunger(amanda,20)).
lps_test_result_item('Database state:',9,has_shelter(amanda,false)).
lps_test_result_item('Database state:',9,turns(amanda,0)).
lps_test_result_item('Database state:',9,position(katherine,south,3,16)).
lps_test_result_item('Database state:',9,holds_wood(katherine,0)).
lps_test_result_item('Database state:',9,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',9,health(katherine,50)).
lps_test_result_item('Database state:',9,hunger(katherine,20)).
lps_test_result_item('Database state:',9,has_shelter(katherine,false)).
lps_test_result_item('Database state:',9,turns(katherine,0)).
lps_test_result_item('Database state:',9,tree(7,3)).
lps_test_result_item('Database state:',9,tree(4,4)).
lps_test_result_item('Database state:',9,tree(5,5)).
lps_test_result_item('Database state:',9,tree(5,7)).
lps_test_result_item('Database state:',9,tree(3,17)).
lps_test_result_item('Database state:',9,tree(3,19)).
lps_test_result_item('Database state:',9,tree(4,18)).
lps_test_result_item('Database state:',9,tree(6,18)).
lps_test_result_item('Database state:',9,wood(6,4)).
lps_test_result_item('Database state:',9,wood(5,17)).
lps_test_result_item('Database state:',9,cycles(0)).
lps_test_result_item('Database state:',10,person(amanda,cautious)).
lps_test_result_item('Database state:',10,person(katherine,normal)).
lps_test_result_item('Database state:',10,position(amanda,north,7,4)).
lps_test_result_item('Database state:',10,holds_wood(amanda,0)).
lps_test_result_item('Database state:',10,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',10,health(amanda,50)).
lps_test_result_item('Database state:',10,hunger(amanda,20)).
lps_test_result_item('Database state:',10,has_shelter(amanda,false)).
lps_test_result_item('Database state:',10,turns(amanda,0)).
lps_test_result_item('Database state:',10,position(katherine,south,3,16)).
lps_test_result_item('Database state:',10,holds_wood(katherine,0)).
lps_test_result_item('Database state:',10,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',10,health(katherine,50)).
lps_test_result_item('Database state:',10,hunger(katherine,20)).
lps_test_result_item('Database state:',10,has_shelter(katherine,false)).
lps_test_result_item('Database state:',10,turns(katherine,0)).
lps_test_result_item('Database state:',10,tree(7,3)).
lps_test_result_item('Database state:',10,tree(4,4)).
lps_test_result_item('Database state:',10,tree(5,5)).
lps_test_result_item('Database state:',10,tree(5,7)).
lps_test_result_item('Database state:',10,tree(3,17)).
lps_test_result_item('Database state:',10,tree(3,19)).
lps_test_result_item('Database state:',10,tree(4,18)).
lps_test_result_item('Database state:',10,tree(6,18)).
lps_test_result_item('Database state:',10,wood(6,4)).
lps_test_result_item('Database state:',10,wood(5,17)).
lps_test_result_item('Database state:',10,cycles(0)).
lps_test_result_item('Database state:',11,person(amanda,cautious)).
lps_test_result_item('Database state:',11,person(katherine,normal)).
lps_test_result_item('Database state:',11,position(amanda,north,7,4)).
lps_test_result_item('Database state:',11,holds_wood(amanda,0)).
lps_test_result_item('Database state:',11,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',11,health(amanda,50)).
lps_test_result_item('Database state:',11,hunger(amanda,20)).
lps_test_result_item('Database state:',11,has_shelter(amanda,false)).
lps_test_result_item('Database state:',11,turns(amanda,0)).
lps_test_result_item('Database state:',11,position(katherine,south,3,16)).
lps_test_result_item('Database state:',11,holds_wood(katherine,0)).
lps_test_result_item('Database state:',11,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',11,health(katherine,50)).
lps_test_result_item('Database state:',11,hunger(katherine,20)).
lps_test_result_item('Database state:',11,has_shelter(katherine,false)).
lps_test_result_item('Database state:',11,turns(katherine,0)).
lps_test_result_item('Database state:',11,tree(7,3)).
lps_test_result_item('Database state:',11,tree(4,4)).
lps_test_result_item('Database state:',11,tree(5,5)).
lps_test_result_item('Database state:',11,tree(5,7)).
lps_test_result_item('Database state:',11,tree(3,17)).
lps_test_result_item('Database state:',11,tree(3,19)).
lps_test_result_item('Database state:',11,tree(4,18)).
lps_test_result_item('Database state:',11,tree(6,18)).
lps_test_result_item('Database state:',11,wood(6,4)).
lps_test_result_item('Database state:',11,wood(5,17)).
lps_test_result_item('Database state:',11,cycles(0)).
lps_test_result_item('Database state:',12,person(amanda,cautious)).
lps_test_result_item('Database state:',12,person(katherine,normal)).
lps_test_result_item('Database state:',12,position(amanda,north,7,4)).
lps_test_result_item('Database state:',12,holds_wood(amanda,0)).
lps_test_result_item('Database state:',12,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',12,health(amanda,50)).
lps_test_result_item('Database state:',12,hunger(amanda,20)).
lps_test_result_item('Database state:',12,has_shelter(amanda,false)).
lps_test_result_item('Database state:',12,turns(amanda,0)).
lps_test_result_item('Database state:',12,position(katherine,south,3,16)).
lps_test_result_item('Database state:',12,holds_wood(katherine,0)).
lps_test_result_item('Database state:',12,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',12,health(katherine,50)).
lps_test_result_item('Database state:',12,hunger(katherine,20)).
lps_test_result_item('Database state:',12,has_shelter(katherine,false)).
lps_test_result_item('Database state:',12,turns(katherine,0)).
lps_test_result_item('Database state:',12,tree(7,3)).
lps_test_result_item('Database state:',12,tree(4,4)).
lps_test_result_item('Database state:',12,tree(5,5)).
lps_test_result_item('Database state:',12,tree(5,7)).
lps_test_result_item('Database state:',12,tree(3,17)).
lps_test_result_item('Database state:',12,tree(3,19)).
lps_test_result_item('Database state:',12,tree(4,18)).
lps_test_result_item('Database state:',12,tree(6,18)).
lps_test_result_item('Database state:',12,wood(6,4)).
lps_test_result_item('Database state:',12,wood(5,17)).
lps_test_result_item('Database state:',12,cycles(0)).
lps_test_result_item('Database state:',13,person(amanda,cautious)).
lps_test_result_item('Database state:',13,person(katherine,normal)).
lps_test_result_item('Database state:',13,position(amanda,north,7,4)).
lps_test_result_item('Database state:',13,holds_wood(amanda,0)).
lps_test_result_item('Database state:',13,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',13,health(amanda,50)).
lps_test_result_item('Database state:',13,hunger(amanda,20)).
lps_test_result_item('Database state:',13,has_shelter(amanda,false)).
lps_test_result_item('Database state:',13,turns(amanda,0)).
lps_test_result_item('Database state:',13,position(katherine,south,3,16)).
lps_test_result_item('Database state:',13,holds_wood(katherine,0)).
lps_test_result_item('Database state:',13,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',13,health(katherine,50)).
lps_test_result_item('Database state:',13,hunger(katherine,20)).
lps_test_result_item('Database state:',13,has_shelter(katherine,false)).
lps_test_result_item('Database state:',13,turns(katherine,0)).
lps_test_result_item('Database state:',13,tree(7,3)).
lps_test_result_item('Database state:',13,tree(4,4)).
lps_test_result_item('Database state:',13,tree(5,5)).
lps_test_result_item('Database state:',13,tree(5,7)).
lps_test_result_item('Database state:',13,tree(3,17)).
lps_test_result_item('Database state:',13,tree(3,19)).
lps_test_result_item('Database state:',13,tree(4,18)).
lps_test_result_item('Database state:',13,tree(6,18)).
lps_test_result_item('Database state:',13,wood(6,4)).
lps_test_result_item('Database state:',13,wood(5,17)).
lps_test_result_item('Database state:',13,cycles(0)).
lps_test_result_item('Database state:',14,person(amanda,cautious)).
lps_test_result_item('Database state:',14,person(katherine,normal)).
lps_test_result_item('Database state:',14,position(amanda,north,7,4)).
lps_test_result_item('Database state:',14,holds_wood(amanda,0)).
lps_test_result_item('Database state:',14,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',14,health(amanda,50)).
lps_test_result_item('Database state:',14,hunger(amanda,20)).
lps_test_result_item('Database state:',14,has_shelter(amanda,false)).
lps_test_result_item('Database state:',14,turns(amanda,0)).
lps_test_result_item('Database state:',14,position(katherine,south,3,16)).
lps_test_result_item('Database state:',14,holds_wood(katherine,0)).
lps_test_result_item('Database state:',14,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',14,health(katherine,50)).
lps_test_result_item('Database state:',14,hunger(katherine,20)).
lps_test_result_item('Database state:',14,has_shelter(katherine,false)).
lps_test_result_item('Database state:',14,turns(katherine,0)).
lps_test_result_item('Database state:',14,tree(7,3)).
lps_test_result_item('Database state:',14,tree(4,4)).
lps_test_result_item('Database state:',14,tree(5,5)).
lps_test_result_item('Database state:',14,tree(5,7)).
lps_test_result_item('Database state:',14,tree(3,17)).
lps_test_result_item('Database state:',14,tree(3,19)).
lps_test_result_item('Database state:',14,tree(4,18)).
lps_test_result_item('Database state:',14,tree(6,18)).
lps_test_result_item('Database state:',14,wood(6,4)).
lps_test_result_item('Database state:',14,wood(5,17)).
lps_test_result_item('Database state:',14,cycles(0)).
lps_test_result_item('Database state:',15,person(amanda,cautious)).
lps_test_result_item('Database state:',15,person(katherine,normal)).
lps_test_result_item('Database state:',15,position(amanda,north,7,4)).
lps_test_result_item('Database state:',15,holds_wood(amanda,0)).
lps_test_result_item('Database state:',15,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',15,health(amanda,50)).
lps_test_result_item('Database state:',15,hunger(amanda,20)).
lps_test_result_item('Database state:',15,has_shelter(amanda,false)).
lps_test_result_item('Database state:',15,turns(amanda,0)).
lps_test_result_item('Database state:',15,position(katherine,south,3,16)).
lps_test_result_item('Database state:',15,holds_wood(katherine,0)).
lps_test_result_item('Database state:',15,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',15,health(katherine,50)).
lps_test_result_item('Database state:',15,hunger(katherine,20)).
lps_test_result_item('Database state:',15,has_shelter(katherine,false)).
lps_test_result_item('Database state:',15,turns(katherine,0)).
lps_test_result_item('Database state:',15,tree(7,3)).
lps_test_result_item('Database state:',15,tree(4,4)).
lps_test_result_item('Database state:',15,tree(5,5)).
lps_test_result_item('Database state:',15,tree(5,7)).
lps_test_result_item('Database state:',15,tree(3,17)).
lps_test_result_item('Database state:',15,tree(3,19)).
lps_test_result_item('Database state:',15,tree(4,18)).
lps_test_result_item('Database state:',15,tree(6,18)).
lps_test_result_item('Database state:',15,wood(6,4)).
lps_test_result_item('Database state:',15,wood(5,17)).
lps_test_result_item('Database state:',15,cycles(0)).
lps_test_result_item('Database state:',16,person(amanda,cautious)).
lps_test_result_item('Database state:',16,person(katherine,normal)).
lps_test_result_item('Database state:',16,position(amanda,north,7,4)).
lps_test_result_item('Database state:',16,holds_wood(amanda,0)).
lps_test_result_item('Database state:',16,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',16,health(amanda,50)).
lps_test_result_item('Database state:',16,hunger(amanda,20)).
lps_test_result_item('Database state:',16,has_shelter(amanda,false)).
lps_test_result_item('Database state:',16,turns(amanda,0)).
lps_test_result_item('Database state:',16,position(katherine,south,3,16)).
lps_test_result_item('Database state:',16,holds_wood(katherine,0)).
lps_test_result_item('Database state:',16,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',16,health(katherine,50)).
lps_test_result_item('Database state:',16,hunger(katherine,20)).
lps_test_result_item('Database state:',16,has_shelter(katherine,false)).
lps_test_result_item('Database state:',16,turns(katherine,0)).
lps_test_result_item('Database state:',16,tree(7,3)).
lps_test_result_item('Database state:',16,tree(4,4)).
lps_test_result_item('Database state:',16,tree(5,5)).
lps_test_result_item('Database state:',16,tree(5,7)).
lps_test_result_item('Database state:',16,tree(3,17)).
lps_test_result_item('Database state:',16,tree(3,19)).
lps_test_result_item('Database state:',16,tree(4,18)).
lps_test_result_item('Database state:',16,tree(6,18)).
lps_test_result_item('Database state:',16,wood(6,4)).
lps_test_result_item('Database state:',16,wood(5,17)).
lps_test_result_item('Database state:',16,cycles(0)).
lps_test_result_item('Database state:',17,person(amanda,cautious)).
lps_test_result_item('Database state:',17,person(katherine,normal)).
lps_test_result_item('Database state:',17,position(amanda,north,7,4)).
lps_test_result_item('Database state:',17,holds_wood(amanda,0)).
lps_test_result_item('Database state:',17,holds_food(amanda,0,0,0,0)).
lps_test_result_item('Database state:',17,health(amanda,50)).
lps_test_result_item('Database state:',17,hunger(amanda,20)).
lps_test_result_item('Database state:',17,has_shelter(amanda,false)).
lps_test_result_item('Database state:',17,turns(amanda,0)).
lps_test_result_item('Database state:',17,position(katherine,south,3,16)).
lps_test_result_item('Database state:',17,holds_wood(katherine,0)).
lps_test_result_item('Database state:',17,holds_food(katherine,0,0,0,0)).
lps_test_result_item('Database state:',17,health(katherine,50)).
lps_test_result_item('Database state:',17,hunger(katherine,20)).
lps_test_result_item('Database state:',17,has_shelter(katherine,false)).
lps_test_result_item('Database state:',17,turns(katherine,0)).
lps_test_result_item('Database state:',17,tree(7,3)).
lps_test_result_item('Database state:',17,tree(4,4)).
lps_test_result_item('Database state:',17,tree(5,5)).
lps_test_result_item('Database state:',17,tree(5,7)).
lps_test_result_item('Database state:',17,tree(3,17)).
lps_test_result_item('Database state:',17,tree(3,19)).
lps_test_result_item('Database state:',17,tree(4,18)).
lps_test_result_item('Database state:',17,tree(6,18)).
lps_test_result_item('Database state:',17,wood(6,4)).
lps_test_result_item('Database state:',17,wood(5,17)).
lps_test_result_item('Database state:',17,cycles(0)).
